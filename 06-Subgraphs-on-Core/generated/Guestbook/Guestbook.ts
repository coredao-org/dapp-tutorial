// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class EntrySigned extends ethereum.Event {
  get params(): EntrySigned__Params {
    return new EntrySigned__Params(this);
  }
}

export class EntrySigned__Params {
  _event: EntrySigned;

  constructor(event: EntrySigned) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get message(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Guestbook__entriesResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getMessage(): string {
    return this.value1;
  }
}

export class Guestbook__getEntriesResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get message(): string {
    return this[1].toString();
  }
}

export class Guestbook extends ethereum.SmartContract {
  static bind(address: Address): Guestbook {
    return new Guestbook("Guestbook", address);
  }

  entries(param0: BigInt): Guestbook__entriesResult {
    let result = super.call("entries", "entries(uint256):(string,string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Guestbook__entriesResult(
      result[0].toString(),
      result[1].toString(),
    );
  }

  try_entries(param0: BigInt): ethereum.CallResult<Guestbook__entriesResult> {
    let result = super.tryCall("entries", "entries(uint256):(string,string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Guestbook__entriesResult(value[0].toString(), value[1].toString()),
    );
  }

  getEntries(): Array<Guestbook__getEntriesResultValue0Struct> {
    let result = super.call(
      "getEntries",
      "getEntries():((string,string)[])",
      [],
    );

    return result[0].toTupleArray<Guestbook__getEntriesResultValue0Struct>();
  }

  try_getEntries(): ethereum.CallResult<
    Array<Guestbook__getEntriesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getEntries",
      "getEntries():((string,string)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Guestbook__getEntriesResultValue0Struct>(),
    );
  }
}

export class SignGuestbookCall extends ethereum.Call {
  get inputs(): SignGuestbookCall__Inputs {
    return new SignGuestbookCall__Inputs(this);
  }

  get outputs(): SignGuestbookCall__Outputs {
    return new SignGuestbookCall__Outputs(this);
  }
}

export class SignGuestbookCall__Inputs {
  _call: SignGuestbookCall;

  constructor(call: SignGuestbookCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _message(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SignGuestbookCall__Outputs {
  _call: SignGuestbookCall;

  constructor(call: SignGuestbookCall) {
    this._call = call;
  }
}
