{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/chains/utils.ts"],
  "sourcesContent": ["import type { Chain as ViemChain } from \"viem\";\nimport type { ThirdwebClient } from \"../client/client.js\";\nimport { DEFAULT_RPC_URL, getThirdwebDomains } from \"../utils/domains.js\";\nimport { isThirdwebUrl } from \"../utils/fetch.js\";\nimport { withCache } from \"../utils/promise/withCache.js\";\nimport type {\n  Chain,\n  ChainMetadata,\n  ChainOptions,\n  LegacyChain,\n} from \"./types.js\";\n\n/**\n * @internal Exported for tests\n */\nexport const CUSTOM_CHAIN_MAP = new Map<number, Chain>();\n\n/**\n * Defines a chain with the given options.\n * @param options The options for the chain.\n * @returns The defined chain.\n * @example\n * Just pass the chain ID to connect to:\n * ```ts\n * const chain = defineChain(1);\n * ```\n * Or pass your own RPC or custom values:\n * ```ts\n * const chain = defineChain({\n *  id: 1,\n *  rpc: \"https://my-rpc.com\",\n *  nativeCurrency: {\n *    name: \"Ether\",\n *    symbol: \"ETH\",\n *    decimals: 18,\n *  },\n * });\n * ```\n * @chain\n */\nexport function defineChain(\n  options: number | ChainOptions | ViemChain | LegacyChain,\n): Chain {\n  const RPC_URL = getThirdwebDomains().rpc;\n  if (typeof options === \"number\") {\n    return {\n      id: options,\n      rpc: `https://${options}.${RPC_URL}`,\n    } as const;\n  }\n  if (isViemChain(options)) {\n    return convertViemChain(options);\n  }\n  if (isLegacyChain(options)) {\n    return convertLegacyChain(options);\n  }\n  // otherwise if it's not a viem chain, continue\n  let rpc = options.rpc;\n  if (!rpc) {\n    rpc = `https://${options.id}.${RPC_URL}`;\n  }\n  const chain = { ...options, rpc } as const;\n  CUSTOM_CHAIN_MAP.set(options.id, chain);\n  return chain;\n}\n\n/**\n * @internal\n */\nexport function cacheChains(chains: Chain[]) {\n  for (const chain of chains) {\n    CUSTOM_CHAIN_MAP.set(chain.id, chain);\n  }\n}\n\n/**\n * @internal\n */\nexport function getCachedChain(id: number) {\n  if (CUSTOM_CHAIN_MAP.has(id)) {\n    return CUSTOM_CHAIN_MAP.get(id) as Chain;\n  }\n  const RPC_URL = getThirdwebDomains().rpc;\n  const chain = {\n    id: id,\n    rpc: `https://${id}.${RPC_URL}`,\n  } as const;\n  return chain;\n}\n\n/**\n * @internal\n */\nexport function getCachedChainIfExists(id: number) {\n  return CUSTOM_CHAIN_MAP.get(id);\n}\n\nfunction isLegacyChain(\n  chain: ChainOptions | ViemChain | LegacyChain,\n): chain is LegacyChain {\n  return \"rpc\" in chain && Array.isArray(chain.rpc) && \"slug\" in chain;\n}\n\n/**\n * @internal\n */\nexport function convertLegacyChain(legacyChain: LegacyChain): Chain {\n  const RPC_URL = getThirdwebDomains().rpc;\n  return {\n    id: legacyChain.chainId,\n    name: legacyChain.name,\n    rpc: legacyChain.rpc[0] ?? `https://${legacyChain.chainId}.${RPC_URL}`,\n    blockExplorers: legacyChain?.explorers?.map((explorer) => ({\n      name: explorer.name,\n      url: explorer.url,\n      apiUrl: explorer.url,\n    })),\n    nativeCurrency: {\n      name: legacyChain.nativeCurrency.name,\n      symbol: legacyChain.nativeCurrency.symbol,\n      decimals: legacyChain.nativeCurrency.decimals,\n    },\n    faucets: legacyChain.faucets ? [...legacyChain.faucets] : undefined,\n    icon: legacyChain.icon,\n    testnet: legacyChain.testnet ? true : undefined,\n  };\n}\n\nfunction isViemChain(\n  chain: ChainOptions | ViemChain | LegacyChain,\n): chain is ViemChain {\n  return \"rpcUrls\" in chain && !(\"rpc\" in chain);\n}\n\nfunction convertViemChain(viemChain: ViemChain): Chain {\n  const RPC_URL = getThirdwebDomains().rpc;\n  return {\n    id: viemChain.id,\n    name: viemChain.name,\n    nativeCurrency: {\n      name: viemChain.nativeCurrency.name,\n      symbol: viemChain.nativeCurrency.symbol,\n      decimals: viemChain.nativeCurrency.decimals,\n    },\n    rpc:\n      viemChain.rpcUrls.default.http[0] ?? `https://${viemChain.id}.${RPC_URL}`,\n    blockExplorers: viemChain?.blockExplorers\n      ? Object.values(viemChain?.blockExplorers).map((explorer) => {\n          return {\n            name: explorer.name,\n            url: explorer.url,\n            apiUrl: explorer.apiUrl,\n          };\n        })\n      : [],\n    testnet: viemChain.testnet ? true : undefined,\n  };\n}\n\ntype GetRpcUrlForChainOptions = {\n  client: ThirdwebClient;\n  chain: Chain | number;\n};\n\n/**\n * Retrieves the RPC URL for the specified chain.\n * If a custom RPC URL is defined in the options, it will be used.\n * Otherwise, a thirdweb RPC URL will be constructed using the chain ID and client ID.\n * @param options - The options object containing the chain and client information.\n * @returns The RPC URL for the specified chain.\n * @example\n * ```ts\n * import { getRpcUrlForChain } from \"thirdweb/chains\";\n * const rpcUrl = getRpcUrlForChain({ chain: 1, client });\n * console.log(rpcUrl); // \"https://1.rpc.thirdweb.com/...\n * ```\n * @chain\n */\nexport function getRpcUrlForChain(options: GetRpcUrlForChainOptions): string {\n  const baseRpcUrl = getThirdwebDomains().rpc;\n\n  // if the chain is just a number, construct the RPC URL using the chain ID and client ID\n  if (typeof options.chain === \"number\") {\n    return `https://${options.chain}.${baseRpcUrl}/${options.client.clientId}`;\n  }\n  const { rpc } = options.chain;\n\n  // add on the client ID to the RPC URL if it's a thirdweb URL\n  if (isThirdwebUrl(rpc)) {\n    const rpcUrl = new URL(\n      options.chain.rpc.replace(DEFAULT_RPC_URL, baseRpcUrl),\n    );\n    rpcUrl.pathname = `/${options.client.clientId}`;\n    return rpcUrl.toString();\n  }\n  return rpc;\n}\n\n/**\n * Retrieves the chain symbol from the provided chain.\n * @param chain - The chain.\n * @returns The chain symbol.\n * @internal\n */\nexport async function getChainSymbol(chain: Chain): Promise<string> {\n  if (!chain.nativeCurrency?.symbol) {\n    return getChainMetadata(chain)\n      .then((data) => data.nativeCurrency.symbol)\n      .catch(() => {\n        // if we fail to fetch the chain data, return \"ETH\" as a fallback\n        return \"ETH\";\n      });\n  }\n  // if we have a symbol, return it\n  return chain.nativeCurrency.symbol;\n}\n\n/**\n * Retrieves the number of decimals for the native currency of a given chain.\n * If the chain is not recognized or the data cannot be fetched, it returns a fallback value of 18.\n * @param chain - The chain for which to retrieve the decimals.\n * @returns A promise that resolves to the number of decimals for the native currency of the chain.\n * @internal\n */\nexport async function getChainDecimals(chain: Chain): Promise<number> {\n  if (!chain.nativeCurrency?.decimals) {\n    return getChainMetadata(chain)\n      .then((data) => data.nativeCurrency.decimals)\n      .catch(() => {\n        // if we fail to fetch the chain data, return 18 as a fallback (most likely it's 18)\n        return 18;\n      });\n  }\n  // if we have decimals, return it\n  return chain.nativeCurrency.decimals;\n}\n\n/**\n * Retrieves the name of the native currency for a given chain.\n * If the chain object does not have a native currency name, it attempts to fetch the chain data and retrieve the native currency name from there.\n * If fetching the chain data fails, it falls back to returning \"ETH\".\n * @param chain The chain object for which to retrieve the native currency name.\n * @returns A promise that resolves to the native currency name.\n * @internal\n */\nexport async function getChainNativeCurrencyName(\n  chain: Chain,\n): Promise<string> {\n  if (!chain.nativeCurrency?.name) {\n    return getChainMetadata(chain)\n      .then((data) => data.nativeCurrency.name)\n      .catch(() => {\n        // if we fail to fetch the chain data, return 18 as a fallback (most likely it's 18)\n        return \"ETH\";\n      });\n  }\n  // if we have a name, return it\n  return chain.nativeCurrency.name;\n}\n\ntype FetchChainResponse =\n  | {\n      data: ChainMetadata;\n      error?: never;\n    }\n  | {\n      data?: never;\n      error: unknown;\n    };\n\n/**\n * Retrieves chain data for a given chain.\n * @param chain - The chain object containing the chain ID.\n * @returns A Promise that resolves to the chain data.\n * @throws If there is an error fetching the chain data.\n * @example\n * ```ts\n * const chain = defineChain({ id: 1 });\n * const chainData = await getChainMetadata(chain);\n * console.log(chainData);\n * ```\n * @chain\n */\nexport function getChainMetadata(chain: Chain): Promise<ChainMetadata> {\n  const chainId = chain.id;\n  return withCache(\n    async () => {\n      try {\n        const res = await fetch(\n          `https://api.thirdweb.com/v1/chains/${chainId}`,\n        );\n        if (!res.ok) {\n          res.body?.cancel();\n          throw new Error(`Failed to fetch chain data for chainId ${chainId}`);\n        }\n\n        const response = (await res.json()) as FetchChainResponse;\n        if (response.error) {\n          throw new Error(`Failed to fetch chain data for chainId ${chainId}`);\n        }\n        if (!response.data) {\n          throw new Error(`Failed to fetch chain data for chainId ${chainId}`);\n        }\n\n        const data = response.data;\n\n        return createChainMetadata(chain, data);\n      } catch {\n        return createChainMetadata(chain);\n      }\n    },\n    {\n      cacheKey: `chain:${chainId}`,\n      cacheTime: 5 * 60 * 1000, // 5 minutes\n    },\n  );\n}\n\n/**\n * Convert `ApiChain` to `Chain` object\n * @internal\n */\nexport function convertApiChainToChain(apiChain: ChainMetadata): Chain {\n  return {\n    id: apiChain.chainId,\n    name: apiChain.name,\n    rpc: apiChain.rpc[0] || \"\",\n    testnet: apiChain.testnet === true ? true : undefined,\n    nativeCurrency: apiChain.nativeCurrency,\n    blockExplorers: apiChain.explorers?.map((explorer) => {\n      return {\n        name: explorer.name,\n        url: explorer.url,\n        apiUrl: explorer.url,\n      };\n    }),\n    faucets: apiChain.faucets ? [...apiChain.faucets] : undefined,\n    icon: apiChain.icon,\n  };\n}\n\nfunction createChainMetadata(\n  chain: Chain,\n  data?: ChainMetadata,\n): ChainMetadata {\n  const nativeCurrency = chain.nativeCurrency\n    ? {\n        ...data?.nativeCurrency,\n        ...chain.nativeCurrency,\n      }\n    : data?.nativeCurrency;\n\n  return {\n    ...data,\n    name: chain.name || data?.name || \"\",\n    chainId: chain.id || data?.chainId || -1,\n    rpc: chain.rpc ? [chain.rpc] : data?.rpc || [\"\"],\n    testnet: chain.testnet || data?.testnet || false,\n    nativeCurrency: {\n      name: nativeCurrency?.name || \"\",\n      symbol: nativeCurrency?.symbol || \"\",\n      decimals: nativeCurrency?.decimals || 18,\n    },\n    icon: chain.icon || data?.icon,\n    chain: data?.chain || chain.name || \"\",\n    shortName: data?.shortName || chain.name || \"\",\n    slug: data?.slug || chain.name || \"\",\n    explorers:\n      chain.blockExplorers?.map((e) => ({\n        name: e.name,\n        url: e.url,\n        standard: \"EIP3091\",\n      })) || data?.explorers,\n    stackType: data?.stackType || \"\",\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
