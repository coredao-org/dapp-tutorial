{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/rpc/actions/eth_getBlockByNumber.ts"],
  "sourcesContent": ["import {\n  type BlockTag,\n  type EIP1193RequestFn,\n  type EIP1474Methods,\n  type GetBlockReturnType,\n  formatBlock,\n} from \"viem\";\nimport { numberToHex } from \"../../utils/encoding/hex.js\";\n\ntype GetBlockParameters<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = \"latest\",\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions;\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint;\n      blockTag?: never;\n    }\n  | {\n      blockNumber?: never;\n      /**\n       * The block tag.\n       * default: 'latest'\n       */\n      blockTag?: TBlockTag | BlockTag;\n    }\n);\n\n/**\n * Retrieves a block by its number or tag from the Ethereum blockchain.\n * @param request - The EIP1193 request function.\n * @param params - The parameters for retrieving the block.\n * @returns A promise that resolves to the requested block.\n * @throws An error if the block is not found.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_getBlockByNumber } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const block = await eth_getBlockByNumber(rpcRequest, {\n *  blockNumber: 123456,\n *  includeTransactions: true,\n * });\n * ```\n */\nexport async function eth_getBlockByNumber<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = \"latest\",\n>(\n  request: EIP1193RequestFn<EIP1474Methods>,\n  params: GetBlockParameters<TIncludeTransactions, TBlockTag>,\n): Promise<GetBlockReturnType<undefined, TIncludeTransactions, TBlockTag>> {\n  const blockTag = params.blockTag ?? \"latest\";\n  const includeTransactions = params.includeTransactions ?? false;\n  const blockNumberHex =\n    params.blockNumber !== undefined\n      ? numberToHex(params.blockNumber)\n      : undefined;\n\n  const block = await request({\n    method: \"eth_getBlockByNumber\",\n    params: [blockNumberHex || blockTag, includeTransactions],\n  });\n  if (!block) {\n    throw new Error(\"Block not found\");\n  }\n  return formatBlock(block) as GetBlockReturnType<\n    undefined,\n    TIncludeTransactions,\n    TBlockTag\n  >;\n}\n"],
  "mappings": ";;;;;;;;AAgDA,eAAsB,qBAIpB,SACA,QAA2D;AAE3D,QAAM,WAAW,OAAO,YAAY;AACpC,QAAM,sBAAsB,OAAO,uBAAuB;AAC1D,QAAM,iBACJ,OAAO,gBAAgB,SACnB,YAAY,OAAO,WAAW,IAC9B;AAEN,QAAM,QAAQ,MAAM,QAAQ;IAC1B,QAAQ;IACR,QAAQ,CAAC,kBAAkB,UAAU,mBAAmB;GACzD;AACD,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,iBAAiB;EACnC;AACA,SAAO,YAAY,KAAK;AAK1B;",
  "names": []
}
