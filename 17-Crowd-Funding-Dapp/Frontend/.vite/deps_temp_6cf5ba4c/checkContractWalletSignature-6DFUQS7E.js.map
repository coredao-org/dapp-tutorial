{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/extensions/erc1271/checkContractWalletSignature.ts"],
  "sourcesContent": ["import { type SignableMessage, hashMessage } from \"viem\";\nimport type { ThirdwebContract } from \"../../contract/contract.js\";\nimport { isHex } from \"../../utils/encoding/hex.js\";\nimport { isValidSignature } from \"./__generated__/isValidSignature/read/isValidSignature.js\";\n\n/**\n * @extension ERC1271\n */\nexport type CheckContractWalletSignatureOptions = {\n  contract: ThirdwebContract;\n  message: SignableMessage;\n  signature: string;\n};\nconst MAGIC_VALUE = \"0x1626ba7e\";\n\n/**\n * Checks if a contract wallet signature is valid.\n * @deprecated Use `verifySignature` instead\n * @param options - The options for the checkContractWalletSignature function.\n * @param options.contract - The contract to check the signature against.\n * @param options.message - The message to check the signature against.\n * @param options.signature - The signature to check.\n * @extension ERC1271\n * @example\n * ```ts\n * import { checkContractWalletSignature } from \"thirdweb/extensions/erc1271\";\n * const isValid = await checkContractWalletSignature({\n *  contract: myContract,\n *  message: \"hello world\",\n *  signature: \"0x...\",\n * });\n * ```\n * @returns A promise that resolves with a boolean indicating if the signature is valid.\n */\nexport async function checkContractWalletSignature(\n  options: CheckContractWalletSignatureOptions,\n) {\n  if (!isHex(options.signature)) {\n    throw new Error(\"The signature must be a valid hex string.\");\n  }\n  const result = await isValidSignature({\n    contract: options.contract,\n    hash: hashMessage(options.message),\n    signature: options.signature,\n  });\n  return result === MAGIC_VALUE;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAM,cAAc;AAqBpB,eAAsB,6BACpB,SAA4C;AAE5C,MAAI,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC7B,UAAM,IAAI,MAAM,2CAA2C;EAC7D;AACA,QAAM,SAAS,MAAM,iBAAiB;IACpC,UAAU,QAAQ;IAClB,MAAM,YAAY,QAAQ,OAAO;IACjC,WAAW,QAAQ;GACpB;AACD,SAAO,WAAW;AACpB;",
  "names": []
}
