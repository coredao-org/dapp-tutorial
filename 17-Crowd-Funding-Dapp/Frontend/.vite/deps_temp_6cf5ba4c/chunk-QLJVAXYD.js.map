{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/wallets/ecosystem/get-ecosystem-wallet-auth-options.ts"],
  "sourcesContent": ["import { getThirdwebBaseUrl } from \"../../utils/domains.js\";\nimport { withCache } from \"../../utils/promise/withCache.js\";\nimport type { AuthOption } from \"../types.js\";\nimport type { EcosystemWalletId } from \"../wallet-types.js\";\n\nexport type EcosystemOptions = {\n  name: string;\n  imageUrl?: string;\n  slug: string;\n  homepage?: string;\n  authOptions: AuthOption[];\n  smartAccountOptions: SmartAccountOptions;\n};\n\ntype SmartAccountOptions = {\n  chainIds: number[];\n  sponsorGas: boolean;\n  accountFactoryAddress: string;\n};\n\n/**\n * Retrieves the specified auth options for a given ecosystem wallet, if any.\n * @param walletId The ecosystem wallet ID.\n * @returns {AuthOption[] | undefined} The auth options for the ecosystem wallet.\n * @internal\n */\nexport async function getEcosystemInfo(\n  walletId: EcosystemWalletId,\n): Promise<EcosystemOptions> {\n  return withCache(\n    async () => {\n      const res = await fetch(\n        `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/ecosystem-wallet`,\n        {\n          headers: {\n            \"x-ecosystem-id\": walletId,\n          },\n        },\n      );\n\n      const data = await res.json();\n\n      if (!data || data.code === \"UNAUTHORIZED\") {\n        throw new Error(\n          data.message ||\n            `Could not find ecosystem wallet with id ${walletId}, please check your ecosystem wallet configuration.`,\n        );\n      }\n\n      // siwe is the auth option in the backend, but we want to use wallet as the auth option in the frontend\n      if (data.authOptions?.includes(\"siwe\")) {\n        data.authOptions = data.authOptions.filter((o: string) => o !== \"siwe\");\n        data.authOptions.push(\"wallet\");\n      }\n\n      return data;\n    },\n    {\n      cacheKey: `ecosystem-wallet-options-${walletId}`,\n      cacheTime: 1000 * 60 * 5, // 5 mins\n    },\n  );\n}\n"],
  "mappings": ";;;;;;;;AA0BA,eAAsB,iBACpB,UAA2B;AAE3B,SAAO,UACL,YAAW;AA9Bf;AA+BM,UAAM,MAAM,MAAM,MAChB,GAAG,mBAAmB,aAAa,CAAC,oCACpC;MACE,SAAS;QACP,kBAAkB;;KAErB;AAGH,UAAM,OAAO,MAAM,IAAI,KAAI;AAE3B,QAAI,CAAC,QAAQ,KAAK,SAAS,gBAAgB;AACzC,YAAM,IAAI,MACR,KAAK,WACH,2CAA2C,QAAQ,qDAAqD;IAE9G;AAGA,SAAI,UAAK,gBAAL,mBAAkB,SAAS,SAAS;AACtC,WAAK,cAAc,KAAK,YAAY,OAAO,CAAC,MAAc,MAAM,MAAM;AACtE,WAAK,YAAY,KAAK,QAAQ;IAChC;AAEA,WAAO;EACT,GACA;IACE,UAAU,4BAA4B,QAAQ;IAC9C,WAAW,MAAO,KAAK;;GACxB;AAEL;",
  "names": []
}
