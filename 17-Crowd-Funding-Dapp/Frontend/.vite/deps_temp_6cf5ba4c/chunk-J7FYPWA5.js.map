{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/wallets/in-app/core/authentication/getLoginPath.ts", "../../node_modules/thirdweb/src/wallets/in-app/web/lib/auth/constants.ts", "../../node_modules/thirdweb/src/wallets/in-app/web/lib/auth/oauth.ts"],
  "sourcesContent": ["import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { getThirdwebBaseUrl } from \"../../../../utils/domains.js\";\nimport { type AuthOption, authOptions } from \"../../../../wallets/types.js\";\nimport type { Ecosystem } from \"../wallet/types.js\";\n\nconst getLoginOptionRoute = (option: AuthOption) => {\n  if (!authOptions.includes(option as AuthOption)) {\n    throw new Error(`Unknown auth option ${option}`);\n  }\n  switch (option) {\n    case \"wallet\":\n      return \"siwe\";\n    default:\n      return option;\n  }\n};\n\nexport const getLoginUrl = ({\n  authOption,\n  client,\n  ecosystem,\n  mode = \"popup\",\n  redirectUrl,\n}: {\n  authOption: AuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  mode?: \"popup\" | \"redirect\" | \"window\";\n  redirectUrl?: string;\n}) => {\n  if (mode === \"popup\" && redirectUrl) {\n    throw new Error(\"Redirect URL is not supported for popup mode\");\n  }\n\n  if (mode === \"window\" && !redirectUrl) {\n    throw new Error(\"Redirect URL is required for window mode\");\n  }\n\n  const route = getLoginOptionRoute(authOption);\n  let baseUrl = `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/login/${route}?clientId=${client.clientId}`;\n  if (ecosystem?.partnerId) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}&ecosystemPartnerId=${ecosystem.partnerId}`;\n  } else if (ecosystem) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}`;\n  }\n\n  // Always append redirectUrl to the baseUrl if mode is not popup\n  if (mode !== \"popup\") {\n    const formattedRedirectUrl = new URL(redirectUrl || window.location.href);\n    formattedRedirectUrl.searchParams.set(\"walletId\", ecosystem?.id || \"inApp\");\n    formattedRedirectUrl.searchParams.set(\"authProvider\", authOption);\n    baseUrl = `${baseUrl}&redirectUrl=${encodeURIComponent(formattedRedirectUrl.toString())}`;\n  }\n\n  return baseUrl;\n};\n\nexport const getLoginCallbackUrl = ({\n  authOption,\n  client,\n  ecosystem,\n}: {\n  authOption: AuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n}): string => {\n  const route = getLoginOptionRoute(authOption);\n  let baseUrl = `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/login/${route}/callback?clientId=${client.clientId}`;\n  if (ecosystem?.partnerId) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}&ecosystemPartnerId=${ecosystem.partnerId}`;\n  } else if (ecosystem) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}`;\n  }\n\n  return baseUrl;\n};\n", "export const DEFAULT_POP_UP_SIZE = \"width=350, height=500\";\n", "import type { ThirdwebClient } from \"../../../../../client/client.js\";\nimport { getThirdwebBaseUrl } from \"../../../../../utils/domains.js\";\nimport type { OAuthOption } from \"../../../../../wallets/types.js\";\nimport { getLoginUrl } from \"../../../core/authentication/getLoginPath.js\";\nimport type { AuthStoredTokenWithCookieReturnType } from \"../../../core/authentication/types.js\";\nimport type { Ecosystem } from \"../../../core/wallet/types.js\";\nimport { DEFAULT_POP_UP_SIZE } from \"./constants.js\";\n\nconst closeWindow = ({\n  isWindowOpenedByFn,\n  win,\n  closeOpenedWindow,\n}: {\n  win?: Window | null;\n  isWindowOpenedByFn: boolean;\n  closeOpenedWindow?: (openedWindow: Window) => void;\n}) => {\n  if (isWindowOpenedByFn) {\n    win?.close();\n  } else {\n    if (win && closeOpenedWindow) {\n      closeOpenedWindow(win);\n    } else if (win) {\n      win.close();\n    }\n  }\n};\n\nexport const loginWithOauthRedirect = (options: {\n  authOption: OAuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  redirectUrl?: string;\n  mode?: \"redirect\" | \"popup\" | \"window\";\n}): void => {\n  const loginUrl = getLoginUrl({\n    ...options,\n    mode: options.mode || \"redirect\",\n  });\n  if (options.mode === \"redirect\") {\n    window.location.href = loginUrl;\n  } else {\n    window.open(loginUrl);\n  }\n};\n\nexport const loginWithOauth = async (options: {\n  authOption: OAuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  openedWindow?: Window | null | undefined;\n  closeOpenedWindow?: ((openedWindow: Window) => void) | undefined;\n}): Promise<AuthStoredTokenWithCookieReturnType> => {\n  let win = options.openedWindow;\n  let isWindowOpenedByFn = false;\n  if (!win) {\n    win = window.open(\n      getLoginUrl({ ...options, mode: \"popup\" }),\n      `Login to ${options.authOption}`,\n      DEFAULT_POP_UP_SIZE,\n    );\n    isWindowOpenedByFn = true;\n  }\n  if (!win) {\n    throw new Error(\"Something went wrong opening pop-up\");\n  }\n\n  const result = await new Promise<AuthStoredTokenWithCookieReturnType>(\n    (resolve, reject) => {\n      // detect when the user closes the login window\n      const pollTimer = window.setInterval(async () => {\n        if (win.closed) {\n          clearInterval(pollTimer);\n          window.removeEventListener(\"message\", messageListener);\n          reject(new Error(\"User closed login window\"));\n        }\n      }, 1000);\n\n      const messageListener = async (\n        event: MessageEvent<{\n          eventType: string;\n          authResult?: AuthStoredTokenWithCookieReturnType;\n          errorString?: string;\n        }>,\n      ) => {\n        if (event.origin !== getThirdwebBaseUrl(\"inAppWallet\")) {\n          return;\n        }\n        if (typeof event.data !== \"object\") {\n          reject(new Error(\"Invalid event data\"));\n          return;\n        }\n\n        switch (event.data.eventType) {\n          case \"oauthSuccessResult\": {\n            window.removeEventListener(\"message\", messageListener);\n            clearInterval(pollTimer);\n            closeWindow({\n              isWindowOpenedByFn,\n              win,\n              closeOpenedWindow: options.closeOpenedWindow,\n            });\n            if (event.data.authResult) {\n              resolve(event.data.authResult);\n            }\n            break;\n          }\n          case \"oauthFailureResult\": {\n            window.removeEventListener(\"message\", messageListener);\n            clearInterval(pollTimer);\n            closeWindow({\n              isWindowOpenedByFn,\n              win,\n              closeOpenedWindow: options.closeOpenedWindow,\n            });\n            reject(new Error(event.data.errorString));\n            break;\n          }\n          default: {\n            // no-op, DO NOT THROW HERE\n          }\n        }\n      };\n      window.addEventListener(\"message\", messageListener);\n    },\n  );\n  return result;\n};\n"],
  "mappings": "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",
  "names": []
}
