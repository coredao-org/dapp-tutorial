{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/extensions/erc20/read/getCurrencyMetadata.ts"],
  "sourcesContent": ["import { isNativeTokenAddress } from \"../../../constants/addresses.js\";\nimport type { BaseTransactionOptions } from \"../../../transaction/types.js\";\nimport { name } from \"../../common/read/name.js\";\nimport { symbol } from \"../../common/read/symbol.js\";\nimport { decimals } from \"../__generated__/IERC20/read/decimals.js\";\n\n/**\n * @extension ERC20\n */\nexport type GetCurrencyMetadataResult = {\n  name: string;\n  symbol: string;\n  decimals: number;\n};\n\n/**\n * Retrieves the metadata of a currency.\n * @param options - The options for the transaction.\n * @returns A promise that resolves to an object containing the currency metadata.\n * @extension ERC20\n * @example\n * ```ts\n * import { getCurrencyMetadata } from \"thirdweb/extensions/erc20\";\n *\n * const currencyMetadata = await getCurrencyMetadata({ contract });\n * ```\n */\nexport async function getCurrencyMetadata(\n  options: BaseTransactionOptions,\n): Promise<GetCurrencyMetadataResult> {\n  // if the contract is the native token, return the native currency metadata\n  if (isNativeTokenAddress(options.contract.address)) {\n    return {\n      name: \"Ether\",\n      symbol: \"ETH\",\n      decimals: 18,\n      // overwrite with native currency of the chain if available\n      ...options.contract.chain.nativeCurrency,\n    };\n  }\n\n  try {\n    const [name_, symbol_, decimals_] = await Promise.all([\n      name(options).catch(() => \"\"),\n      symbol(options),\n      decimals(options),\n    ]);\n\n    return {\n      name: name_,\n      symbol: symbol_,\n      decimals: decimals_,\n    };\n  } catch {\n    throw new Error(\"Invalid currency token\");\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AA2BA,eAAsB,oBACpB,SAA+B;AAG/B,MAAI,qBAAqB,QAAQ,SAAS,OAAO,GAAG;AAClD,WAAO;MACL,MAAM;MACN,QAAQ;MACR,UAAU;;MAEV,GAAG,QAAQ,SAAS,MAAM;;EAE9B;AAEA,MAAI;AACF,UAAM,CAAC,OAAO,SAAS,SAAS,IAAI,MAAM,QAAQ,IAAI;MACpD,KAAK,OAAO,EAAE,MAAM,MAAM,EAAE;MAC5B,OAAO,OAAO;MACd,SAAS,OAAO;KACjB;AAED,WAAO;MACL,MAAM;MACN,QAAQ;MACR,UAAU;;EAEd,QAAQ;AACN,UAAM,IAAI,MAAM,wBAAwB;EAC1C;AACF;",
  "names": []
}
