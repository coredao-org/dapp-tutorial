{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/analytics/track/transaction.ts"],
  "sourcesContent": ["import type { ThirdwebClient } from \"../../client/client.js\";\nimport { stringify } from \"../../utils/json.js\";\nimport type { Ecosystem } from \"../../wallets/in-app/core/wallet/types.js\";\nimport type { WalletId } from \"../../wallets/wallet-types.js\";\nimport { track } from \"./index.js\";\n\ntype TransactionEvent = {\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  transactionHash?: string;\n  walletAddress?: string;\n  walletType?: WalletId | ({} & string);\n  chainId?: number;\n  contractAddress?: string;\n  functionName?: string;\n  gasPrice?: bigint;\n  error?: {\n    message: string;\n    code: string;\n  };\n};\n\n/**\n * @internal\n */\nexport async function trackTransaction(args: TransactionEvent) {\n  return trackTransactionEvent({\n    ...args,\n    action: \"transaction:sent\",\n  });\n}\n\n/**\n * @internal\n */\nfunction trackTransactionEvent(\n  args: TransactionEvent & {\n    action: \"transaction:sent\";\n  },\n) {\n  return track({\n    client: args.client,\n    ecosystem: args.ecosystem,\n    data: {\n      action: args.action,\n      clientId: args.client.clientId,\n      chainId: args.chainId,\n      transactionHash: args.transactionHash,\n      walletAddress: args.walletAddress,\n      walletType: args.walletType,\n      contractAddress: args.contractAddress,\n      functionName: args.functionName,\n      gasPrice: args.gasPrice,\n      errorCode: stringify(args.error),\n    },\n  });\n}\n"],
  "mappings": ";;;;;;;;AAyBA,eAAsB,iBAAiB,MAAsB;AAC3D,SAAO,sBAAsB;IAC3B,GAAG;IACH,QAAQ;GACT;AACH;AAKA,SAAS,sBACP,MAEC;AAED,SAAO,MAAM;IACX,QAAQ,KAAK;IACb,WAAW,KAAK;IAChB,MAAM;MACJ,QAAQ,KAAK;MACb,UAAU,KAAK,OAAO;MACtB,SAAS,KAAK;MACd,iBAAiB,KAAK;MACtB,eAAe,KAAK;MACpB,YAAY,KAAK;MACjB,iBAAiB,KAAK;MACtB,cAAc,KAAK;MACnB,UAAU,KAAK;MACf,WAAW,UAAU,KAAK,KAAK;;GAElC;AACH;",
  "names": []
}
