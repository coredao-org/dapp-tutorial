{
  "version": 3,
  "sources": ["../../node_modules/thirdweb/src/gas/estimate-l1-fee.ts"],
  "sourcesContent": ["import { serializeTransaction } from \"viem\";\nimport { getContract } from \"../contract/contract.js\";\nimport { toSerializableTransaction } from \"../transaction/actions/to-serializable-transaction.js\";\nimport type { PreparedTransaction } from \"../transaction/prepare-transaction.js\";\nimport { readContract } from \"../transaction/read-contract.js\";\n\ntype EstimateL1FeeOptions = {\n  transaction: PreparedTransaction;\n  gasPriceOracleAddress?: string;\n};\n\nconst OPStackGasPriceOracleAddress =\n  \"0x420000000000000000000000000000000000000F\";\n\n/**\n * @internal\n */\nexport async function estimateL1Fee(options: EstimateL1FeeOptions) {\n  const { transaction, gasPriceOracleAddress } = options;\n  const oracleContract = getContract({\n    client: transaction.client,\n    address: gasPriceOracleAddress || OPStackGasPriceOracleAddress,\n    chain: transaction.chain,\n  });\n\n  // purposefully remove gasPrice from the transaction\n\n  const { gasPrice, ...serializableTx } = await toSerializableTransaction({\n    transaction,\n  });\n  const serialized = serializeTransaction({\n    ...serializableTx,\n    type: \"eip1559\",\n  });\n  //serializeTransaction(transaction);\n  return readContract({\n    contract: oracleContract,\n    method: \"function getL1Fee(bytes memory _data) view returns (uint256)\",\n    params: [serialized],\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAM,+BACJ;AAKF,eAAsB,cAAc,SAA6B;AAC/D,QAAM,EAAE,aAAa,sBAAqB,IAAK;AAC/C,QAAM,iBAAiB,YAAY;IACjC,QAAQ,YAAY;IACpB,SAAS,yBAAyB;IAClC,OAAO,YAAY;GACpB;AAID,QAAM,EAAE,UAAU,GAAG,eAAc,IAAK,MAAM,0BAA0B;IACtE;GACD;AACD,QAAM,aAAa,qBAAqB;IACtC,GAAG;IACH,MAAM;GACP;AAED,SAAO,aAAa;IAClB,UAAU;IACV,QAAQ;IACR,QAAQ,CAAC,UAAU;GACpB;AACH;",
  "names": []
}
